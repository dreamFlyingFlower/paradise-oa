<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.mapper.RoleMenuMapper">
	<resultMap id="BaseResultMap" type="com.wy.model.RoleMenu">
		<id column="role_id" jdbcType="BIGINT" property="roleId" />
		<id column="menu_id" jdbcType="BIGINT" property="menuId" />
		<result column="permissions" jdbcType="VARCHAR" property="permissions" />
		<result column="menu_state" jdbcType="INTEGER" property="menuState" />
		<result column="role_code" javaType="VARCHAR" property="roleCode"/>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		role_id, menu_id, permissions, menu_state
	</sql>
	<select id="selectByExample" parameterType="com.wy.model.RoleMenuExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from tr_role_menu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tr_role_menu
		where role_id = #{roleId,jdbcType=BIGINT}
		and menu_id = #{menuId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="map">
		delete from tr_role_menu
		where role_id = #{roleId,jdbcType=BIGINT}
		and menu_id = #{menuId,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.wy.model.RoleMenuExample">
		delete from tr_role_menu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.wy.model.RoleMenu">
		insert into tr_role_menu (role_id, menu_id, permissions,
		menu_state)
		values (#{roleId,jdbcType=BIGINT}, #{menuId,jdbcType=BIGINT}, #{permissions,jdbcType=VARCHAR},
		#{menuState,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.wy.model.RoleMenu">
		insert into tr_role_menu
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="menuId != null">
				menu_id,
			</if>
			<if test="permissions != null">
				permissions,
			</if>
			<if test="menuState != null">
				menu_state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=BIGINT},
			</if>
			<if test="menuId != null">
				#{menuId,jdbcType=BIGINT},
			</if>
			<if test="permissions != null">
				#{permissions,jdbcType=VARCHAR},
			</if>
			<if test="menuState != null">
				#{menuState,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.wy.model.RoleMenuExample" resultType="java.lang.Long">
		select count(*) from tr_role_menu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tr_role_menu
		<set>
			<if test="record.roleId != null">
				role_id = #{record.roleId,jdbcType=BIGINT},
			</if>
			<if test="record.menuId != null">
				menu_id = #{record.menuId,jdbcType=BIGINT},
			</if>
			<if test="record.permissions != null">
				permissions = #{record.permissions,jdbcType=VARCHAR},
			</if>
			<if test="record.menuState != null">
				menu_state = #{record.menuState,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tr_role_menu
		set role_id = #{record.roleId,jdbcType=BIGINT},
		menu_id = #{record.menuId,jdbcType=BIGINT},
		permissions = #{record.permissions,jdbcType=VARCHAR},
		menu_state = #{record.menuState,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.wy.model.RoleMenu">
		update tr_role_menu
		<set>
			<if test="permissions != null">
				permissions = #{permissions,jdbcType=VARCHAR},
			</if>
			<if test="menuState != null">
				menu_state = #{menuState,jdbcType=INTEGER},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=BIGINT}
		and menu_id = #{menuId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wy.model.RoleMenu">
		update tr_role_menu
		set permissions = #{permissions,jdbcType=VARCHAR},
		menu_state = #{menuState,jdbcType=INTEGER}
		where role_id = #{roleId,jdbcType=BIGINT}
		and menu_id = #{menuId,jdbcType=BIGINT}
	</update>
	<insert id="inserts" parameterType="list">
		insert into tr_role_menu (role_id,menu_id,permissions,menu_state) values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.roleId,jdbcType=BIGINT},#{item.menuId,jdbcType=BIGINT},#{item.permissions,jdbcType=VARCHAR},
			<choose>
				<when test="item.menuState!= null">menu_state = #{item.menuState,jdbcType=INTEGER}</when>
				<otherwise>1</otherwise>
			</choose>
			)
		</foreach>
	</insert>
	<delete id="deleteAll">
		truncate table tr_role_menu
	</delete>
	<select id="selectEntitys" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tr_role_menu
		<where>
			<if test="roleId != null "> and role_id = #{roleId,jdbcType=BIGINT} </if>
			<if test="menuId != null "> and menu_id = #{menuId,jdbcType=BIGINT} </if>
			<if test="permissions != null "> and permissions = #{permissions,jdbcType=VARCHAR} </if>
			<if test="menuState != null "> and menu_state = #{menuState,jdbcType=INTEGER} </if>
		</where>
	</select>
	<select id="selectLists" resultType="map">
		select
		<include refid="Base_Column_List" />
		from tr_role_menu
		<where>
			<if test="roleId != null "> and role_id = #{roleId,jdbcType=BIGINT} </if>
			<if test="menuId != null "> and menu_id = #{menuId,jdbcType=BIGINT} </if>
			<if test="permissions != null "> and permissions = #{permissions,jdbcType=VARCHAR} </if>
			<if test="menuState != null "> and menu_state = #{menuState,jdbcType=INTEGER} </if>
		</where>
	</select>
	<select id="countByEntity" resultType="java.lang.Long">
		select count(*) from tr_role_menu
		<where>
			<if test="roleId != null ">and role_id = #{roleId,jdbcType=BIGINT} </if>
			<if test="menuId != null ">and menu_id = #{menuId,jdbcType=BIGINT} </if>
			<if test="permissions != null ">and permissions = #{permissions,jdbcType=VARCHAR} </if>
			<if test="menuState != null ">and menu_state = #{menuState,jdbcType=INTEGER} </if>
		</where>
	</select>
	<select id="selectMaxValue" resultType="java.lang.Long">
		select
		<choose>
			<when test="'roleId' == _parameter.column">max(role_id)</when>
			<when test="'menuId' == _parameter.column">max(menu_id)</when>
			<when test="'menuState' == _parameter.column">max(menu_state)</when>
			<otherwise>max(0)</otherwise>
		</choose>
		from tr_role_menu
	</select>
	<select id="selectMaxTime" resultType="java.util.Date">
		select
		<choose>
			<otherwise>1970-01-01 00:00:00</otherwise>
		</choose>
		from tr_role_menu
	</select>

	<select id="selectPermissionByUserId" resultMap="BaseResultMap">
		select a.role_id,a.menu_id,a.permissions,b.role_code
		from tr_role_menu a
		inner join ts_role b on b.role_id = a.role_id
		inner join ts_user c on c.user_id = b.user_id
		where c.user_id = #{userId,jdbcType=BIGINT}
	</select>
</mapper>