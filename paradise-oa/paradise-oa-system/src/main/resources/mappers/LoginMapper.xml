<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.mapper.LoginMapper">
  <resultMap id="BaseResultMap" type="com.wy.model.Login">
    <id column="login_id" jdbcType="BIGINT" property="loginId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    login_id, user_id, username, login_ip, login_date, state
  </sql>
  <select id="selectByExample" parameterType="com.wy.model.LoginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_login
    where login_id = #{loginId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_login
    where login_id = #{loginId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wy.model.LoginExample">
    delete from tb_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="login_id" keyProperty="loginId" parameterType="com.wy.model.Login" useGeneratedKeys="true">
    insert into tb_login (user_id, username, login_ip, 
      login_date, state)
    values (#{userId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{loginIp,jdbcType=VARCHAR}, 
      #{loginDate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="login_id" keyProperty="loginId" parameterType="com.wy.model.Login" useGeneratedKeys="true">
    insert into tb_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginDate != null">
        login_date,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wy.model.LoginExample" resultType="java.lang.Long">
    select count(*) from tb_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_login
    <set>
      <if test="record.loginId != null">
        login_id = #{record.loginId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.loginIp != null">
        login_ip = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginDate != null">
        login_date = #{record.loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_login
    set login_id = #{record.loginId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      login_ip = #{record.loginIp,jdbcType=VARCHAR},
      login_date = #{record.loginDate,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wy.model.Login">
    update tb_login
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where login_id = #{loginId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wy.model.Login">
    update tb_login
    set user_id = #{userId,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where login_id = #{loginId,jdbcType=BIGINT}
  </update>
  <insert id="inserts" parameterType="list">
    insert into tb_login (login_id,user_id,username,login_ip,login_date,state)  values <foreach collection="list" item="item" index="index" separator=",">(null,#{item.userId,jdbcType=BIGINT},#{item.username,jdbcType=VARCHAR},#{item.loginIp,jdbcType=VARCHAR},<choose><when test="item.loginDate!= null">login_date = #{item.loginDate,jdbcType=TIMESTAMP},</when><otherwise>CURRENT_TIMESTAMP,</otherwise></choose><choose><when test="item.state!= null">state = #{item.state,jdbcType=INTEGER}</when><otherwise>1</otherwise></choose>)</foreach>
  </insert>
  <delete id="deleteByPrimaryKeys" parameterType="list">
    delete from  tb_login where login_id in <foreach open="(" close=")" collection="list" item="loginId" separator=",">#{loginId,jdbcType=BIGINT}</foreach>
  </delete>
  <delete id="deleteAll">
    delete from  tb_login 
  </delete>
  <select id="selectEntitys" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from tb_login<where><if test = "loginId != null "> and login_id = #{loginId,jdbcType=BIGINT} </if><if test = "userId != null "> and user_id = #{userId,jdbcType=BIGINT} </if><if test = "username != null "> and username = #{username,jdbcType=VARCHAR} </if><if test = "loginIp != null "> and login_ip = #{loginIp,jdbcType=VARCHAR} </if><if test = "loginDate != null "> and login_date = #{loginDate,jdbcType=TIMESTAMP} </if><if test = "state != null "> and state = #{state,jdbcType=INTEGER} </if></where>
  </select>
  <select id="selectLists" resultType="map">
    select <include refid="Base_Column_List" /> from tb_login<where><if test = "loginId != null "> and login_id = #{loginId,jdbcType=BIGINT} </if><if test = "userId != null "> and user_id = #{userId,jdbcType=BIGINT} </if><if test = "username != null "> and username = #{username,jdbcType=VARCHAR} </if><if test = "loginIp != null "> and login_ip = #{loginIp,jdbcType=VARCHAR} </if><if test = "loginDate != null "> and login_date = #{loginDate,jdbcType=TIMESTAMP} </if><if test = "state != null "> and state = #{state,jdbcType=INTEGER} </if></where>
  </select>
  <select id="countByEntity" resultType="java.lang.Long">
    select count(*) from tb_login<where><if test = "loginId != null ">and login_id = #{loginId,jdbcType=BIGINT} </if><if test = "userId != null ">and user_id = #{userId,jdbcType=BIGINT} </if><if test = "username != null ">and username = #{username,jdbcType=VARCHAR} </if><if test = "loginIp != null ">and login_ip = #{loginIp,jdbcType=VARCHAR} </if><if test = "loginDate != null ">and login_date = #{loginDate,jdbcType=TIMESTAMP} </if><if test = "state != null ">and state = #{state,jdbcType=INTEGER} </if></where>
  </select>
  <select id="getMaxValue" resultType="java.lang.Long">
    select <choose><when test="'loginId' == _parameter.column">max(login_id)</when><when test="'userId' == _parameter.column">max(user_id)</when><when test="'state' == _parameter.column">max(state)</when><otherwise>max(0)</otherwise>  </choose>  from tb_login
  </select>
  <select id="getMaxTime" resultType="java.util.Date">
    select <choose><when test="loginDate == ${column}">max(loginDate)</when><otherwise>1970-01-01 00:00:00</otherwise>  </choose>  from tb_login
  </select>
</mapper>