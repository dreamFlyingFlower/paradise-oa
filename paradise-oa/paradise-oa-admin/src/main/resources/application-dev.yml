spring:
  datasource: 
    # 若数据库没有指定时区,连接还需要加上时区.多数据源情况下会从hikari的配置文件中查找数据库连接
    url: jdbc:mysql://localhost:3306/simpleoa?autoReconnect=true&useUnicode=true&serverTimezone=GMT&useSSL=false
    username: root
    password: 52LDforever
    driverClassName: com.mysql.cj.jdbc.Driver
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # druidweb端页面监控用户名和密码
      stat-view-servlet: 
        login-username: root
        login-password: 123456
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 初始化大小,最小,最大
      initial-size: 8
      min-idle: 5 
      max-active: 20
      max-wait: 10000
      # 配置间隔多久才进行一次检测,检测需要关闭的空闲连接,单位毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间,单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 通过connectProperties属性来打开mergeSql功能,慢SQL记录
      connect-properties: 
        druid.stat.mergeSql: true
        druid.stat.slowSqlMillis: 5000
      poolPreparedStatements: true
      # 配置监控统计拦截的filters,去掉后监控界面sql无法统计,wall用于防火墙
      filters: stat,wall,slf4j
      filter:
        wall:
          enabled: true
          config: 
            alter-table-allow: false
            truncate-allow: false
            drop-table-allow: false
            # 是否允许非以上基本语句的其他语句,默认关闭
            none-base-statement-allow: false
            # 检查update语句是否无where条件
            update-where-none-check: true
            # select into outfile是否允许,这是mysql注入攻击常见手段,默认是禁止的
            select-into-outfile-allow: false
            # 是否允许调用connection.getmetdata方法,这个方法会暴露数据库的表信息
            metadata-allow: true
            # 允许多条sql语句同时执行
            multi-statement-allow: true
          # 对被认为是攻击的sql进行log.error输出
          log-violation: true
          # 对被认为是攻击的sql抛出异常
          throw-exception: true
        stat:
          log-slow-sql: true
          enabled: true
          merge-sql: true
          slow-sql-millis: 1000
#  rabbitmq:
#    host: 192.168.1.150
#    username: guest
#    password: guest
#    listener:
#      simple:
#        retry:
#          enabled: true
#          max-attempts: 5
#      direct:
#        retry:
#          enabled: true
#          max-attempts: 5
#  activiti:
#    history-level: full
#    db-history-used: true