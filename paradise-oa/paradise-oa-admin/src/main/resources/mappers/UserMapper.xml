<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.wy.model.User">
		<id column="user_id" jdbcType="BIGINT" property="userId" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="realname" jdbcType="VARCHAR" property="realname" />
		<result column="depart_id" jdbcType="INTEGER" property="departId" />
		<result column="idcard" jdbcType="VARCHAR" property="idcard" />
		<result column="sex" jdbcType="VARCHAR" property="sex" />
		<result column="age" jdbcType="INTEGER" property="age" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="state" jdbcType="TINYINT" property="state" />
		<result column="avatar" jdbcType="VARCHAR" property="avatar" />
		<result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />

		<collection property="roles" resultMap="com.wy.mapper.RoleMapper.BaseResultMap" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
										separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
										separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		user_id, username, password, realname, depart_id, idcard, sex, age, address, birthday,
		email, mobile, state, avatar, createtime, updatetime
	</sql>
	<select id="selectByExample" parameterType="com.wy.model.UserExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from ts_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ts_user
		where user_id = #{userId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from ts_user
		where user_id =
		#{userId,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.wy.model.UserExample">
		delete from ts_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" keyColumn="user_id" keyProperty="userId"
		parameterType="com.wy.model.User" useGeneratedKeys="true">
		insert into ts_user (username, password,
		realname,
		depart_id, idcard, sex,
		age, address, birthday,
		email, mobile, state,
		avatar, createtime,
		updatetime
		)
		values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{realname,jdbcType=VARCHAR},
		#{departId,jdbcType=INTEGER}, #{idcard,jdbcType=VARCHAR},
		#{sex,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR},
		#{birthday,jdbcType=TIMESTAMP},
		#{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
		#{state,jdbcType=TINYINT},
		#{avatar,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP},
		#{updatetime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" keyColumn="user_id" keyProperty="userId"
		parameterType="com.wy.model.User" useGeneratedKeys="true">
		insert into ts_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="realname != null">
				realname,
			</if>
			<if test="departId != null">
				depart_id,
			</if>
			<if test="idcard != null">
				idcard,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="avatar != null">
				avatar,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
			<if test="updatetime != null">
				updatetime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="departId != null">
				#{departId,jdbcType=INTEGER},
			</if>
			<if test="idcard != null">
				#{idcard,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=TINYINT},
			</if>
			<if test="avatar != null">
				#{avatar,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.wy.model.UserExample"
		resultType="java.lang.Long">
		select count(*) from ts_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update ts_user
		<set>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=BIGINT},
			</if>
			<if test="record.username != null">
				username = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.realname != null">
				realname = #{record.realname,jdbcType=VARCHAR},
			</if>
			<if test="record.departId != null">
				depart_id = #{record.departId,jdbcType=INTEGER},
			</if>
			<if test="record.idcard != null">
				idcard = #{record.idcard,jdbcType=VARCHAR},
			</if>
			<if test="record.sex != null">
				sex = #{record.sex,jdbcType=VARCHAR},
			</if>
			<if test="record.age != null">
				age = #{record.age,jdbcType=INTEGER},
			</if>
			<if test="record.address != null">
				address = #{record.address,jdbcType=VARCHAR},
			</if>
			<if test="record.birthday != null">
				birthday = #{record.birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.mobile != null">
				mobile = #{record.mobile,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=TINYINT},
			</if>
			<if test="record.avatar != null">
				avatar = #{record.avatar,jdbcType=VARCHAR},
			</if>
			<if test="record.createtime != null">
				createtime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updatetime != null">
				updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update ts_user
		set user_id = #{record.userId,jdbcType=BIGINT},
		username =
		#{record.username,jdbcType=VARCHAR},
		password = #{record.password,jdbcType=VARCHAR},
		realname =
		#{record.realname,jdbcType=VARCHAR},
		depart_id = #{record.departId,jdbcType=INTEGER},
		idcard =
		#{record.idcard,jdbcType=VARCHAR},
		sex = #{record.sex,jdbcType=VARCHAR},
		age =
		#{record.age,jdbcType=INTEGER},
		address = #{record.address,jdbcType=VARCHAR},
		birthday =
		#{record.birthday,jdbcType=TIMESTAMP},
		email = #{record.email,jdbcType=VARCHAR},
		mobile =
		#{record.mobile,jdbcType=VARCHAR},
		state = #{record.state,jdbcType=TINYINT},
		avatar =
		#{record.avatar,jdbcType=VARCHAR},
		createtime = #{record.createtime,jdbcType=TIMESTAMP},
		updatetime
		= #{record.updatetime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.wy.model.User">
		update ts_user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				realname = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="departId != null">
				depart_id = #{departId,jdbcType=INTEGER},
			</if>
			<if test="idcard != null">
				idcard = #{idcard,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=TINYINT},
			</if>
			<if test="avatar != null">
				avatar = #{avatar,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				updatetime = #{updatetime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where user_id = #{userId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wy.model.User">
		update ts_user
		set username =
		#{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		realname =
		#{realname,jdbcType=VARCHAR},
		depart_id = #{departId,jdbcType=INTEGER},
		idcard =
		#{idcard,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER},
		address =
		#{address,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=TIMESTAMP},
		email =
		#{email,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		state = #{state,jdbcType=TINYINT},
		avatar = #{avatar,jdbcType=VARCHAR},
		createtime = #{createtime,jdbcType=TIMESTAMP},
		updatetime =
		#{updatetime,jdbcType=TIMESTAMP}
		where user_id = #{userId,jdbcType=BIGINT}
	</update>
	<insert id="inserts" parameterType="list">
		insert into ts_user
		(user_id,username,password,realname,depart_id,idcard,sex,age,address,birthday,email,mobile,state,avatar,createtime,updatetime)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(null,#{item.username,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},#{item.realname,jdbcType=VARCHAR},#{item.departId,jdbcType=INTEGER},#{item.idcard,jdbcType=VARCHAR},#{item.sex,jdbcType=VARCHAR},
			<choose>
				<when test="item.age!= null">age = #{item.age,jdbcType=INTEGER},</when>
				<otherwise>0,</otherwise>
			</choose>
			#{item.address,jdbcType=VARCHAR},#{item.birthday,jdbcType=TIMESTAMP},#{item.email,jdbcType=VARCHAR},#{item.mobile,jdbcType=VARCHAR},
			<choose>
				<when test="item.state!= null">state = #{item.state,jdbcType=TINYINT},</when>
				<otherwise>1,</otherwise>
			</choose>
			#{item.avatar,jdbcType=VARCHAR},
			<choose>
				<when test="item.createtime!= null">createtime = #{item.createtime,jdbcType=TIMESTAMP},</when>
				<otherwise>CURRENT_TIMESTAMP,</otherwise>
			</choose>
			<choose>
				<when test="item.updatetime!= null">updatetime = #{item.updatetime,jdbcType=TIMESTAMP}</when>
				<otherwise>CURRENT_TIMESTAMP</otherwise>
			</choose>
			)
		</foreach>
	</insert>
	<delete id="deleteByPrimaryKeys" parameterType="list">
		delete from ts_user where user_id in
		<foreach open="(" close=")" collection="list" item="userId" separator=",">#{userId,jdbcType=BIGINT}
		</foreach>
	</delete>
	<delete id="deleteAll">
		delete from ts_user
	</delete>
	<select id="selectEntitys" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ts_user
		<where>
			<if test="userId != null "> and user_id = #{userId,jdbcType=BIGINT} </if>
			<if test="username != null "> and username = #{username,jdbcType=VARCHAR} </if>
			<if test="password != null "> and password = #{password,jdbcType=VARCHAR} </if>
			<if test="realname != null "> and realname = #{realname,jdbcType=VARCHAR} </if>
			<if test="departId != null "> and depart_id = #{departId,jdbcType=INTEGER} </if>
			<if test="idcard != null "> and idcard = #{idcard,jdbcType=VARCHAR} </if>
			<if test="sex != null "> and sex = #{sex,jdbcType=VARCHAR} </if>
			<if test="age != null "> and age = #{age,jdbcType=INTEGER} </if>
			<if test="address != null "> and address = #{address,jdbcType=VARCHAR} </if>
			<if test="birthday != null "> and birthday = #{birthday,jdbcType=TIMESTAMP} </if>
			<if test="email != null "> and email = #{email,jdbcType=VARCHAR} </if>
			<if test="mobile != null "> and mobile = #{mobile,jdbcType=VARCHAR} </if>
			<if test="state != null "> and state = #{state,jdbcType=TINYINT} </if>
			<if test="avatar != null "> and avatar = #{avatar,jdbcType=VARCHAR} </if>
			<if test="createtime != null "> and createtime = #{createtime,jdbcType=TIMESTAMP} </if>
			<if test="updatetime != null "> and updatetime = #{updatetime,jdbcType=TIMESTAMP} </if>
		</where>
	</select>
	<select id="selectLists" resultType="map">
		select
		<include refid="Base_Column_List" />
		from ts_user
		<where>
			<if test="userId != null "> and user_id = #{userId,jdbcType=BIGINT} </if>
			<if test="username != null "> and username = #{username,jdbcType=VARCHAR} </if>
			<if test="password != null "> and password = #{password,jdbcType=VARCHAR} </if>
			<if test="realname != null "> and realname = #{realname,jdbcType=VARCHAR} </if>
			<if test="departId != null "> and depart_id = #{departId,jdbcType=INTEGER} </if>
			<if test="idcard != null "> and idcard = #{idcard,jdbcType=VARCHAR} </if>
			<if test="sex != null "> and sex = #{sex,jdbcType=VARCHAR} </if>
			<if test="age != null "> and age = #{age,jdbcType=INTEGER} </if>
			<if test="address != null "> and address = #{address,jdbcType=VARCHAR} </if>
			<if test="birthday != null "> and birthday = #{birthday,jdbcType=TIMESTAMP} </if>
			<if test="email != null "> and email = #{email,jdbcType=VARCHAR} </if>
			<if test="mobile != null "> and mobile = #{mobile,jdbcType=VARCHAR} </if>
			<if test="state != null "> and state = #{state,jdbcType=TINYINT} </if>
			<if test="avatar != null "> and avatar = #{avatar,jdbcType=VARCHAR} </if>
			<if test="createtime != null "> and createtime = #{createtime,jdbcType=TIMESTAMP} </if>
			<if test="updatetime != null "> and updatetime = #{updatetime,jdbcType=TIMESTAMP} </if>
		</where>
	</select>
	<select id="countByEntity" resultType="java.lang.Long">
		select count(*) from ts_user
		<where>
			<if test="userId != null ">and user_id = #{userId,jdbcType=BIGINT} </if>
			<if test="username != null ">and username = #{username,jdbcType=VARCHAR} </if>
			<if test="password != null ">and password = #{password,jdbcType=VARCHAR} </if>
			<if test="realname != null ">and realname = #{realname,jdbcType=VARCHAR} </if>
			<if test="departId != null ">and depart_id = #{departId,jdbcType=INTEGER} </if>
			<if test="idcard != null ">and idcard = #{idcard,jdbcType=VARCHAR} </if>
			<if test="sex != null ">and sex = #{sex,jdbcType=VARCHAR} </if>
			<if test="age != null ">and age = #{age,jdbcType=INTEGER} </if>
			<if test="address != null ">and address = #{address,jdbcType=VARCHAR} </if>
			<if test="birthday != null ">and birthday = #{birthday,jdbcType=TIMESTAMP} </if>
			<if test="email != null ">and email = #{email,jdbcType=VARCHAR} </if>
			<if test="mobile != null ">and mobile = #{mobile,jdbcType=VARCHAR} </if>
			<if test="state != null ">and state = #{state,jdbcType=TINYINT} </if>
			<if test="avatar != null ">and avatar = #{avatar,jdbcType=VARCHAR} </if>
			<if test="createtime != null ">and createtime = #{createtime,jdbcType=TIMESTAMP} </if>
			<if test="updatetime != null ">and updatetime = #{updatetime,jdbcType=TIMESTAMP} </if>
		</where>
	</select>
	<select id="getMaxValue" resultType="java.lang.Long">
		select
		<choose>
			<when test="'userId' == _parameter.column">max(user_id)</when>
			<when test="'departId' == _parameter.column">max(depart_id)</when>
			<when test="'age' == _parameter.column">max(age)</when>
			<when test="'state' == _parameter.column">max(state)</when>
			<otherwise>max(0)</otherwise>
		</choose>
		from ts_user
	</select>
	<select id="getMaxTime" resultType="java.util.Date">
		select
		<choose>
			<when test="birthday == ${column}">max(birthday)</when>
			<when test="createtime == ${column}">max(createtime)</when>
			<when test="updatetime == ${column}">max(updatetime)</when>
			<otherwise>1970-01-01 00:00:00</otherwise>
		</choose>
		from ts_user
	</select>

	<select id="selectByUsername" resultMap="BaseResultMap">
		select a.user_id, a.username, a.password,
		a.realname, a.depart_id, a.idcard, a.sex, a.age, a.address, a.birthday,
		a.email, a.mobile, a.state,
		a.avatar, c.role_id,c.role_name,c.role_code,c.role_type,c.role_state
		from ts_user a left join
		tr_user_role b on a.user_id = b.user_id
		left join ts_role c on c.role_id = b.role_id
		where
		a.username=#{username,jdbcType=VARCHAR}
		or a.email=#{username,jdbcType=VARCHAR}
		or
		a.mobile=#{username,jdbcType=VARCHAR}
	</select>

	<select id="selectUserRoles" resultMap="BaseResultMap">
		select a.user_id, a.username, a.password, a.realname, a.depart_id, a.idcard, a.sex, a.age,
		a.address, a.birthday,
		a.email, a.mobile, a.state, a.avatar,
		c.role_id,c.role_name,c.role_code,c.role_type,c.role_state
		from ts_user a left join tr_user_role b
		on a.user_id = b.user_id
		left join ts_role c on c.role_id = b.role_id where a.user_id in
		<foreach collection="list" open="(" close=")" item="userId" separator=",">
			#{userId,jdbcType=BIGINT}
		</foreach>
	</select>
</mapper>