<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.mapper.UserinfoMapper">
  <resultMap id="BaseResultMap" type="com.wy.model.Userinfo">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="interest" jdbcType="VARCHAR" property="interest" />
    <result column="education" jdbcType="INTEGER" property="education" />
    <result column="university" jdbcType="VARCHAR" property="university" />
    <result column="professional" jdbcType="VARCHAR" property="professional" />
    <result column="resigndate" jdbcType="DATE" property="resigndate" />
    <result column="marry" jdbcType="INTEGER" property="marry" />
    <result column="height" jdbcType="INTEGER" property="height" />
    <result column="weight" jdbcType="DOUBLE" property="weight" />
    <result column="blood" jdbcType="VARCHAR" property="blood" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, interest, education, university, professional, resigndate, marry, height, 
    weight, blood, remark
  </sql>
  <select id="selectByExample" parameterType="com.wy.model.UserinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ts_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts_userinfo
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ts_userinfo
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wy.model.UserinfoExample">
    delete from ts_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wy.model.Userinfo">
    insert into ts_userinfo (user_id, interest, education, 
      university, professional, resigndate, 
      marry, height, weight, 
      blood, remark)
    values (#{userId,jdbcType=BIGINT}, #{interest,jdbcType=VARCHAR}, #{education,jdbcType=INTEGER}, 
      #{university,jdbcType=VARCHAR}, #{professional,jdbcType=VARCHAR}, #{resigndate,jdbcType=DATE}, 
      #{marry,jdbcType=INTEGER}, #{height,jdbcType=INTEGER}, #{weight,jdbcType=DOUBLE}, 
      #{blood,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wy.model.Userinfo">
    insert into ts_userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="interest != null">
        interest,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="university != null">
        university,
      </if>
      <if test="professional != null">
        professional,
      </if>
      <if test="resigndate != null">
        resigndate,
      </if>
      <if test="marry != null">
        marry,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="blood != null">
        blood,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="interest != null">
        #{interest,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=INTEGER},
      </if>
      <if test="university != null">
        #{university,jdbcType=VARCHAR},
      </if>
      <if test="professional != null">
        #{professional,jdbcType=VARCHAR},
      </if>
      <if test="resigndate != null">
        #{resigndate,jdbcType=DATE},
      </if>
      <if test="marry != null">
        #{marry,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DOUBLE},
      </if>
      <if test="blood != null">
        #{blood,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wy.model.UserinfoExample" resultType="java.lang.Long">
    select count(*) from ts_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ts_userinfo
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.interest != null">
        interest = #{record.interest,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=INTEGER},
      </if>
      <if test="record.university != null">
        university = #{record.university,jdbcType=VARCHAR},
      </if>
      <if test="record.professional != null">
        professional = #{record.professional,jdbcType=VARCHAR},
      </if>
      <if test="record.resigndate != null">
        resigndate = #{record.resigndate,jdbcType=DATE},
      </if>
      <if test="record.marry != null">
        marry = #{record.marry,jdbcType=INTEGER},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=DOUBLE},
      </if>
      <if test="record.blood != null">
        blood = #{record.blood,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ts_userinfo
    set user_id = #{record.userId,jdbcType=BIGINT},
      interest = #{record.interest,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=INTEGER},
      university = #{record.university,jdbcType=VARCHAR},
      professional = #{record.professional,jdbcType=VARCHAR},
      resigndate = #{record.resigndate,jdbcType=DATE},
      marry = #{record.marry,jdbcType=INTEGER},
      height = #{record.height,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=DOUBLE},
      blood = #{record.blood,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wy.model.Userinfo">
    update ts_userinfo
    <set>
      <if test="interest != null">
        interest = #{interest,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="university != null">
        university = #{university,jdbcType=VARCHAR},
      </if>
      <if test="professional != null">
        professional = #{professional,jdbcType=VARCHAR},
      </if>
      <if test="resigndate != null">
        resigndate = #{resigndate,jdbcType=DATE},
      </if>
      <if test="marry != null">
        marry = #{marry,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="blood != null">
        blood = #{blood,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wy.model.Userinfo">
    update ts_userinfo
    set interest = #{interest,jdbcType=VARCHAR},
      education = #{education,jdbcType=INTEGER},
      university = #{university,jdbcType=VARCHAR},
      professional = #{professional,jdbcType=VARCHAR},
      resigndate = #{resigndate,jdbcType=DATE},
      marry = #{marry,jdbcType=INTEGER},
      height = #{height,jdbcType=INTEGER},
      weight = #{weight,jdbcType=DOUBLE},
      blood = #{blood,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <insert id="inserts" parameterType="list">
    insert into ts_userinfo (user_id,interest,education,university,professional,resigndate,marry,height,weight,blood,remark)  values <foreach collection="list" item="item" index="index" separator=",">(#{item.userId,jdbcType=BIGINT},#{item.interest,jdbcType=VARCHAR},#{item.education,jdbcType=INTEGER},#{item.university,jdbcType=VARCHAR},#{item.professional,jdbcType=VARCHAR},#{item.resigndate,jdbcType=DATE},#{item.marry,jdbcType=INTEGER},#{item.height,jdbcType=INTEGER},#{item.weight,jdbcType=DOUBLE},#{item.blood,jdbcType=VARCHAR},#{item.remark,jdbcType=VARCHAR})</foreach>
  </insert>
  <delete id="deleteByPrimaryKeys" parameterType="list">
    delete from  ts_userinfo where user_id in <foreach open="(" close=")" collection="list" item="userId" separator=",">#{userId,jdbcType=BIGINT}</foreach>
  </delete>
  <delete id="deleteAll">
    delete from  ts_userinfo 
  </delete>
  <select id="selectEntitys" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from ts_userinfo<where><if test = "userId != null "> and user_id = #{userId,jdbcType=BIGINT} </if><if test = "interest != null "> and interest = #{interest,jdbcType=VARCHAR} </if><if test = "education != null "> and education = #{education,jdbcType=INTEGER} </if><if test = "university != null "> and university = #{university,jdbcType=VARCHAR} </if><if test = "professional != null "> and professional = #{professional,jdbcType=VARCHAR} </if><if test = "resigndate != null "> and resigndate = #{resigndate,jdbcType=DATE} </if><if test = "marry != null "> and marry = #{marry,jdbcType=INTEGER} </if><if test = "height != null "> and height = #{height,jdbcType=INTEGER} </if><if test = "weight != null "> and weight = #{weight,jdbcType=DOUBLE} </if><if test = "blood != null "> and blood = #{blood,jdbcType=VARCHAR} </if><if test = "remark != null "> and remark = #{remark,jdbcType=VARCHAR} </if></where>
  </select>
  <select id="selectLists" resultType="map">
    select <include refid="Base_Column_List" /> from ts_userinfo<where><if test = "userId != null "> and user_id = #{userId,jdbcType=BIGINT} </if><if test = "interest != null "> and interest = #{interest,jdbcType=VARCHAR} </if><if test = "education != null "> and education = #{education,jdbcType=INTEGER} </if><if test = "university != null "> and university = #{university,jdbcType=VARCHAR} </if><if test = "professional != null "> and professional = #{professional,jdbcType=VARCHAR} </if><if test = "resigndate != null "> and resigndate = #{resigndate,jdbcType=DATE} </if><if test = "marry != null "> and marry = #{marry,jdbcType=INTEGER} </if><if test = "height != null "> and height = #{height,jdbcType=INTEGER} </if><if test = "weight != null "> and weight = #{weight,jdbcType=DOUBLE} </if><if test = "blood != null "> and blood = #{blood,jdbcType=VARCHAR} </if><if test = "remark != null "> and remark = #{remark,jdbcType=VARCHAR} </if></where>
  </select>
  <select id="countByEntity" resultType="java.lang.Long">
    select count(*) from ts_userinfo<where><if test = "userId != null ">and user_id = #{userId,jdbcType=BIGINT} </if><if test = "interest != null ">and interest = #{interest,jdbcType=VARCHAR} </if><if test = "education != null ">and education = #{education,jdbcType=INTEGER} </if><if test = "university != null ">and university = #{university,jdbcType=VARCHAR} </if><if test = "professional != null ">and professional = #{professional,jdbcType=VARCHAR} </if><if test = "resigndate != null ">and resigndate = #{resigndate,jdbcType=DATE} </if><if test = "marry != null ">and marry = #{marry,jdbcType=INTEGER} </if><if test = "height != null ">and height = #{height,jdbcType=INTEGER} </if><if test = "weight != null ">and weight = #{weight,jdbcType=DOUBLE} </if><if test = "blood != null ">and blood = #{blood,jdbcType=VARCHAR} </if><if test = "remark != null ">and remark = #{remark,jdbcType=VARCHAR} </if></where>
  </select>
  <select id="getMaxValue" resultType="java.lang.Long">
    select <choose><when test="'userId' == _parameter.column">max(user_id)</when><when test="'education' == _parameter.column">max(education)</when><when test="'marry' == _parameter.column">max(marry)</when><when test="'height' == _parameter.column">max(height)</when><when test="'weight' == _parameter.column">max(weight)</when><otherwise>max(0)</otherwise>  </choose>  from ts_userinfo
  </select>
  <select id="getMaxTime" resultType="java.util.Date">
    select <choose><when test="resigndate == ${column}">max(resigndate)</when><otherwise>1970-01-01 00:00:00</otherwise>  </choose>  from ts_userinfo
  </select>
</mapper>