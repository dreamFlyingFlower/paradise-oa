<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.mapper.UserNoticeMapper">
  <resultMap id="BaseResultMap" type="com.wy.model.UserNotice">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <id column="notice_id" jdbcType="BIGINT" property="noticeId" />
    <result column="read" jdbcType="INTEGER" property="read" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, notice_id, read
  </sql>
  <select id="selectByExample" parameterType="com.wy.model.UserNoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tr_user_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tr_user_notice
    where user_id = #{userId,jdbcType=BIGINT}
      and notice_id = #{noticeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from tr_user_notice
    where user_id = #{userId,jdbcType=BIGINT}
      and notice_id = #{noticeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wy.model.UserNoticeExample">
    delete from tr_user_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wy.model.UserNotice">
    insert into tr_user_notice (user_id, notice_id, read
      )
    values (#{userId,jdbcType=BIGINT}, #{noticeId,jdbcType=BIGINT}, #{read,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wy.model.UserNotice">
    insert into tr_user_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="noticeId != null">
        notice_id,
      </if>
      <if test="read != null">
        read,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="noticeId != null">
        #{noticeId,jdbcType=BIGINT},
      </if>
      <if test="read != null">
        #{read,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wy.model.UserNoticeExample" resultType="java.lang.Long">
    select count(*) from tr_user_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tr_user_notice
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.noticeId != null">
        notice_id = #{record.noticeId,jdbcType=BIGINT},
      </if>
      <if test="record.read != null">
        read = #{record.read,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tr_user_notice
    set user_id = #{record.userId,jdbcType=BIGINT},
      notice_id = #{record.noticeId,jdbcType=BIGINT},
      read = #{record.read,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wy.model.UserNotice">
    update tr_user_notice
    <set>
      <if test="read != null">
        read = #{read,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
      and notice_id = #{noticeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wy.model.UserNotice">
    update tr_user_notice
    set read = #{read,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
      and notice_id = #{noticeId,jdbcType=BIGINT}
  </update>
  <insert id="inserts" parameterType="list">
    insert into tr_user_notice (user_id,notice_id,read)  values <foreach collection="list" item="item" index="index" separator=",">(#{item.userId,jdbcType=BIGINT},#{item.noticeId,jdbcType=BIGINT},<choose><when test="item.read!= null">read = #{item.read,jdbcType=INTEGER}</when><otherwise>0</otherwise></choose>)</foreach>
  </insert>
  <delete id="deleteAll">
    truncate table  tr_user_notice 
  </delete>
  <select id="selectEntitys" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from tr_user_notice<where><if test = "userId != null "> and user_id = #{userId,jdbcType=BIGINT} </if><if test = "noticeId != null "> and notice_id = #{noticeId,jdbcType=BIGINT} </if><if test = "read != null "> and read = #{read,jdbcType=INTEGER} </if></where>
  </select>
  <select id="selectLists" resultType="map">
    select <include refid="Base_Column_List" /> from tr_user_notice<where><if test = "userId != null "> and user_id = #{userId,jdbcType=BIGINT} </if><if test = "noticeId != null "> and notice_id = #{noticeId,jdbcType=BIGINT} </if><if test = "read != null "> and read = #{read,jdbcType=INTEGER} </if></where>
  </select>
  <select id="countByEntity" resultType="java.lang.Long">
    select count(*) from tr_user_notice<where><if test = "userId != null ">and user_id = #{userId,jdbcType=BIGINT} </if><if test = "noticeId != null ">and notice_id = #{noticeId,jdbcType=BIGINT} </if><if test = "read != null ">and read = #{read,jdbcType=INTEGER} </if></where>
  </select>
  <select id="selectMaxValue" resultType="java.lang.Long">
    select <choose><when test="'userId' == _parameter.column">max(user_id)</when><when test="'noticeId' == _parameter.column">max(notice_id)</when><when test="'read' == _parameter.column">max(read)</when><otherwise>max(0)</otherwise>  </choose>  from tr_user_notice
  </select>
  <select id="selectMaxTime" resultType="java.util.Date">
    select <choose><otherwise>1970-01-01 00:00:00</otherwise>  </choose>  from tr_user_notice
  </select>
</mapper>