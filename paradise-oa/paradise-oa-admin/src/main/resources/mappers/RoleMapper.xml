<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.mapper.RoleMapper">
	<resultMap id="BaseResultMap" type="com.wy.model.Role">
		<id column="role_id" jdbcType="BIGINT" property="roleId" />
		<result column="role_name" jdbcType="VARCHAR" property="roleName" />
		<result column="role_type" jdbcType="TINYINT" property="roleType" />
		<result column="role_state" jdbcType="INTEGER" property="roleState" />
		<result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
										separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
										separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		role_id, role_name, role_type, role_state, role_desc
	</sql>
	<select id="selectByExample" parameterType="com.wy.model.RoleExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from ts_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ts_role
		where role_id = #{roleId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from ts_role
		where role_id = #{roleId,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.wy.model.RoleExample">
		delete from ts_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" keyColumn="role_id" keyProperty="roleId"
		parameterType="com.wy.model.Role" useGeneratedKeys="true">
		insert into ts_role (role_name, role_type, role_state,
		role_desc)
		values (#{roleName,jdbcType=VARCHAR}, #{roleType,jdbcType=TINYINT}, #{roleState,jdbcType=INTEGER},
		#{roleDesc,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" keyColumn="role_id" keyProperty="roleId"
		parameterType="com.wy.model.Role" useGeneratedKeys="true">
		insert into ts_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleName != null">
				role_name,
			</if>
			<if test="roleType != null">
				role_type,
			</if>
			<if test="roleState != null">
				role_state,
			</if>
			<if test="roleDesc != null">
				role_desc,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleType != null">
				#{roleType,jdbcType=TINYINT},
			</if>
			<if test="roleState != null">
				#{roleState,jdbcType=INTEGER},
			</if>
			<if test="roleDesc != null">
				#{roleDesc,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.wy.model.RoleExample"
		resultType="java.lang.Long">
		select count(*) from ts_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update ts_role
		<set>
			<if test="record.roleId != null">
				role_id = #{record.roleId,jdbcType=BIGINT},
			</if>
			<if test="record.roleName != null">
				role_name = #{record.roleName,jdbcType=VARCHAR},
			</if>
			<if test="record.roleType != null">
				role_type = #{record.roleType,jdbcType=TINYINT},
			</if>
			<if test="record.roleState != null">
				role_state = #{record.roleState,jdbcType=INTEGER},
			</if>
			<if test="record.roleDesc != null">
				role_desc = #{record.roleDesc,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update ts_role
		set role_id = #{record.roleId,jdbcType=BIGINT},
		role_name = #{record.roleName,jdbcType=VARCHAR},
		role_type = #{record.roleType,jdbcType=TINYINT},
		role_state = #{record.roleState,jdbcType=INTEGER},
		role_desc = #{record.roleDesc,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.wy.model.Role">
		update ts_role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleType != null">
				role_type = #{roleType,jdbcType=TINYINT},
			</if>
			<if test="roleState != null">
				role_state = #{roleState,jdbcType=INTEGER},
			</if>
			<if test="roleDesc != null">
				role_desc = #{roleDesc,jdbcType=VARCHAR},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wy.model.Role">
		update ts_role
		set role_name = #{roleName,jdbcType=VARCHAR},
		role_type = #{roleType,jdbcType=TINYINT},
		role_state = #{roleState,jdbcType=INTEGER},
		role_desc = #{roleDesc,jdbcType=VARCHAR}
		where role_id = #{roleId,jdbcType=BIGINT}
	</update>
	<insert id="inserts" parameterType="list">
		insert into ts_role (role_id,role_name,role_type,role_state,role_desc) values
		<foreach collection="list" item="item" index="index" separator=",">
			(null,#{item.roleName,jdbcType=VARCHAR},
			<choose>
				<when test="item.roleType!= null">role_type = #{item.roleType,jdbcType=TINYINT},</when>
				<otherwise>1,</otherwise>
			</choose>
			<choose>
				<when test="item.roleState!= null">role_state = #{item.roleState,jdbcType=INTEGER},</when>
				<otherwise>1,</otherwise>
			</choose>
			#{item.roleDesc,jdbcType=VARCHAR})
		</foreach>
	</insert>
	<delete id="deleteByPrimaryKeys" parameterType="list">
		delete from ts_role where role_id in
		<foreach open="(" close=")" collection="list" item="roleId" separator=",">#{roleId,jdbcType=BIGINT}
		</foreach>
	</delete>
	<delete id="deleteAll">
		delete from ts_role
	</delete>
	<select id="selectEntitys" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ts_role
		<where>
			<if test="roleId != null "> and role_id = #{roleId,jdbcType=BIGINT} </if>
			<if test="roleName != null "> and role_name = #{roleName,jdbcType=VARCHAR} </if>
			<if test="roleType != null "> and role_type = #{roleType,jdbcType=TINYINT} </if>
			<if test="roleState != null "> and role_state = #{roleState,jdbcType=INTEGER} </if>
			<if test="roleDesc != null "> and role_desc = #{roleDesc,jdbcType=VARCHAR} </if>
		</where>
	</select>
	<select id="selectLists" resultType="map">
		select
		<include refid="Base_Column_List" />
		from ts_role
		<where>
			<if test="roleId != null "> and role_id = #{roleId,jdbcType=BIGINT} </if>
			<if test="roleName != null "> and role_name = #{roleName,jdbcType=VARCHAR} </if>
			<if test="roleType != null "> and role_type = #{roleType,jdbcType=TINYINT} </if>
			<if test="roleState != null "> and role_state = #{roleState,jdbcType=INTEGER} </if>
			<if test="roleDesc != null "> and role_desc = #{roleDesc,jdbcType=VARCHAR} </if>
		</where>
	</select>
	<select id="countByEntity" resultType="java.lang.Long">
		select count(*) from ts_role
		<where>
			<if test="roleId != null ">and role_id = #{roleId,jdbcType=BIGINT} </if>
			<if test="roleName != null ">and role_name = #{roleName,jdbcType=VARCHAR} </if>
			<if test="roleType != null ">and role_type = #{roleType,jdbcType=TINYINT} </if>
			<if test="roleState != null ">and role_state = #{roleState,jdbcType=INTEGER} </if>
			<if test="roleDesc != null ">and role_desc = #{roleDesc,jdbcType=VARCHAR} </if>
		</where>
	</select>
	<select id="getMaxValue" resultType="java.lang.Long">
		select
		<choose>
			<when test="'roleId' == _parameter.column">max(role_id)</when>
			<when test="'roleType' == _parameter.column">max(role_type)</when>
			<when test="'roleState' == _parameter.column">max(role_state)</when>
			<otherwise>max(0)</otherwise>
		</choose>
		from ts_role
	</select>
	<select id="getMaxTime" resultType="java.util.Date">
		select
		<choose>
			<otherwise>1970-01-01 00:00:00</otherwise>
		</choose>
		from ts_role
	</select>
	
	<sql id="selectUserRole">
		select r.role_id, r.role_name, r.role_type, r.role_state, r.role_desc
		from ts_role r left join tr_user_role ur on ur.role_id = r.role_id
		left join ts_user u on u.user_id = ur.user_id
	</sql>

	<select id="selectByUserId" parameterType="Long" resultMap="BaseResultMap">
		<include refid="selectUserRole" />
		where u.user_id = #{userId} and r.role_type = 1
	</select>
</mapper>