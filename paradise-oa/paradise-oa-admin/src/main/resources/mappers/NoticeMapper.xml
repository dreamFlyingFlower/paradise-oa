<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.mapper.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.wy.model.Notice">
    <id column="notice_id" jdbcType="BIGINT" property="noticeId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="top" jdbcType="INTEGER" property="top" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    notice_id, user_id, title, content, top, type, state, createtime
  </sql>
  <select id="selectByExample" parameterType="com.wy.model.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ts_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts_notice
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ts_notice
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wy.model.NoticeExample">
    delete from ts_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="notice_id" keyProperty="noticeId" parameterType="com.wy.model.Notice" useGeneratedKeys="true">
    insert into ts_notice (user_id, title, content, 
      top, type, state, createtime
      )
    values (#{userId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{top,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="notice_id" keyProperty="noticeId" parameterType="com.wy.model.Notice" useGeneratedKeys="true">
    insert into ts_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="top != null">
        top,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="top != null">
        #{top,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wy.model.NoticeExample" resultType="java.lang.Long">
    select count(*) from ts_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ts_notice
    <set>
      <if test="record.noticeId != null">
        notice_id = #{record.noticeId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.top != null">
        top = #{record.top,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ts_notice
    set notice_id = #{record.noticeId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      top = #{record.top,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wy.model.Notice">
    update ts_notice
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="top != null">
        top = #{top,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wy.model.Notice">
    update ts_notice
    set user_id = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      top = #{top,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where notice_id = #{noticeId,jdbcType=BIGINT}
  </update>
  <insert id="inserts" parameterType="list">
    insert into ts_notice (notice_id,user_id,title,content,top,type,state,createtime)  values <foreach collection="list" item="item" index="index" separator=",">(null,#{item.userId,jdbcType=BIGINT},#{item.title,jdbcType=VARCHAR},#{item.content,jdbcType=VARCHAR},<choose><when test="item.top!= null">top = #{item.top,jdbcType=INTEGER},</when><otherwise>0,</otherwise></choose><choose><when test="item.type!= null">type = #{item.type,jdbcType=INTEGER},</when><otherwise>1,</otherwise></choose><choose><when test="item.state!= null">state = #{item.state,jdbcType=INTEGER},</when><otherwise>1,</otherwise></choose><choose><when test="item.createtime!= null">createtime = #{item.createtime,jdbcType=TIMESTAMP}</when><otherwise>CURRENT_TIMESTAMP</otherwise></choose>)</foreach>
  </insert>
  <delete id="deleteByPrimaryKeys" parameterType="list">
    delete from  ts_notice where notice_id in <foreach open="(" close=")" collection="list" item="noticeId" separator=",">#{noticeId,jdbcType=BIGINT}</foreach>
  </delete>
  <delete id="deleteAll">
    truncate table  ts_notice 
  </delete>
  <select id="selectEntitys" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from ts_notice<where><if test = "noticeId != null "> and notice_id = #{noticeId,jdbcType=BIGINT} </if><if test = "userId != null "> and user_id = #{userId,jdbcType=BIGINT} </if><if test = "title != null "> and title = #{title,jdbcType=VARCHAR} </if><if test = "content != null "> and content = #{content,jdbcType=VARCHAR} </if><if test = "top != null "> and top = #{top,jdbcType=INTEGER} </if><if test = "type != null "> and type = #{type,jdbcType=INTEGER} </if><if test = "state != null "> and state = #{state,jdbcType=INTEGER} </if><if test = "createtime != null "> and createtime = #{createtime,jdbcType=TIMESTAMP} </if></where>
  </select>
  <select id="selectLists" resultType="map">
    select <include refid="Base_Column_List" /> from ts_notice<where><if test = "noticeId != null "> and notice_id = #{noticeId,jdbcType=BIGINT} </if><if test = "userId != null "> and user_id = #{userId,jdbcType=BIGINT} </if><if test = "title != null "> and title = #{title,jdbcType=VARCHAR} </if><if test = "content != null "> and content = #{content,jdbcType=VARCHAR} </if><if test = "top != null "> and top = #{top,jdbcType=INTEGER} </if><if test = "type != null "> and type = #{type,jdbcType=INTEGER} </if><if test = "state != null "> and state = #{state,jdbcType=INTEGER} </if><if test = "createtime != null "> and createtime = #{createtime,jdbcType=TIMESTAMP} </if></where>
  </select>
  <select id="countByEntity" resultType="java.lang.Long">
    select count(*) from ts_notice<where><if test = "noticeId != null ">and notice_id = #{noticeId,jdbcType=BIGINT} </if><if test = "userId != null ">and user_id = #{userId,jdbcType=BIGINT} </if><if test = "title != null ">and title = #{title,jdbcType=VARCHAR} </if><if test = "content != null ">and content = #{content,jdbcType=VARCHAR} </if><if test = "top != null ">and top = #{top,jdbcType=INTEGER} </if><if test = "type != null ">and type = #{type,jdbcType=INTEGER} </if><if test = "state != null ">and state = #{state,jdbcType=INTEGER} </if><if test = "createtime != null ">and createtime = #{createtime,jdbcType=TIMESTAMP} </if></where>
  </select>
  <select id="selectMaxValue" resultType="java.lang.Long">
    select <choose><when test="'noticeId' == _parameter.column">max(notice_id)</when><when test="'userId' == _parameter.column">max(user_id)</when><when test="'top' == _parameter.column">max(top)</when><when test="'type' == _parameter.column">max(type)</when><when test="'state' == _parameter.column">max(state)</when><otherwise>max(0)</otherwise>  </choose>  from ts_notice
  </select>
  <select id="selectMaxTime" resultType="java.util.Date">
    select <choose><when test="createtime == ${column}">max(createtime)</when><otherwise>1970-01-01 00:00:00</otherwise>  </choose>  from ts_notice
  </select>
</mapper>