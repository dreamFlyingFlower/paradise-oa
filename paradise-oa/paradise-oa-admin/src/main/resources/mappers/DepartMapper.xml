<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.mapper.DepartMapper">
	<resultMap id="BaseResultMap" type="com.wy.model.Depart">
		<id column="depart_id" jdbcType="BIGINT" property="departId" />
		<result column="depart_name" jdbcType="VARCHAR" property="departName" />
		<result column="pid" jdbcType="BIGINT" property="pid" />
		<result column="pname" jdbcType="VARCHAR" property="pname" />
		<result column="depart_desc" jdbcType="VARCHAR" property="departDesc" />
		<result column="sort_index" jdbcType="INTEGER" property="sortIndex" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
										separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
										separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		depart_id, depart_name, pid, pname, depart_desc, sort_index
	</sql>
	<select id="selectByExample" parameterType="com.wy.model.DepartExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from ts_depart
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ts_depart
		where depart_id = #{departId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from ts_depart
		where depart_id =
		#{departId,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.wy.model.DepartExample">
		delete from ts_depart
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" keyColumn="depart_id" keyProperty="departId"
		parameterType="com.wy.model.Depart" useGeneratedKeys="true">
		insert into ts_depart (depart_name, pid,
		pname,
		depart_desc, sort_index)
		values (#{departName,jdbcType=VARCHAR}, #{pid,jdbcType=BIGINT},
		#{pname,jdbcType=VARCHAR},
		#{departDesc,jdbcType=VARCHAR}, #{sortIndex,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" keyColumn="depart_id" keyProperty="departId"
		parameterType="com.wy.model.Depart" useGeneratedKeys="true">
		insert into ts_depart
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="departName != null">
				depart_name,
			</if>
			<if test="pid != null">
				pid,
			</if>
			<if test="pname != null">
				pname,
			</if>
			<if test="departDesc != null">
				depart_desc,
			</if>
			<if test="sortIndex != null">
				sort_index,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="departName != null">
				#{departName,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				#{pid,jdbcType=BIGINT},
			</if>
			<if test="pname != null">
				#{pname,jdbcType=VARCHAR},
			</if>
			<if test="departDesc != null">
				#{departDesc,jdbcType=VARCHAR},
			</if>
			<if test="sortIndex != null">
				#{sortIndex,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.wy.model.DepartExample"
		resultType="java.lang.Long">
		select count(*) from ts_depart
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update ts_depart
		<set>
			<if test="record.departId != null">
				depart_id = #{record.departId,jdbcType=BIGINT},
			</if>
			<if test="record.departName != null">
				depart_name = #{record.departName,jdbcType=VARCHAR},
			</if>
			<if test="record.pid != null">
				pid = #{record.pid,jdbcType=BIGINT},
			</if>
			<if test="record.pname != null">
				pname = #{record.pname,jdbcType=VARCHAR},
			</if>
			<if test="record.departDesc != null">
				depart_desc = #{record.departDesc,jdbcType=VARCHAR},
			</if>
			<if test="record.sortIndex != null">
				sort_index = #{record.sortIndex,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update ts_depart
		set depart_id = #{record.departId,jdbcType=BIGINT},
		depart_name =
		#{record.departName,jdbcType=VARCHAR},
		pid = #{record.pid,jdbcType=BIGINT},
		pname =
		#{record.pname,jdbcType=VARCHAR},
		depart_desc = #{record.departDesc,jdbcType=VARCHAR},
		sort_index =
		#{record.sortIndex,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.wy.model.Depart">
		update ts_depart
		<set>
			<if test="departName != null">
				depart_name = #{departName,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				pid = #{pid,jdbcType=BIGINT},
			</if>
			<if test="pname != null">
				pname = #{pname,jdbcType=VARCHAR},
			</if>
			<if test="departDesc != null">
				depart_desc = #{departDesc,jdbcType=VARCHAR},
			</if>
			<if test="sortIndex != null">
				sort_index = #{sortIndex,jdbcType=INTEGER},
			</if>
		</set>
		where depart_id = #{departId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wy.model.Depart">
		update ts_depart
		set depart_name =
		#{departName,jdbcType=VARCHAR},
		pid = #{pid,jdbcType=BIGINT},
		pname = #{pname,jdbcType=VARCHAR},
		depart_desc = #{departDesc,jdbcType=VARCHAR},
		sort_index = #{sortIndex,jdbcType=INTEGER}
		where
		depart_id = #{departId,jdbcType=BIGINT}
	</update>
	<insert id="inserts" parameterType="list">
		insert into ts_depart (depart_id,depart_name,pid,pname,depart_desc,sort_index) values
		<foreach collection="list" item="item" index="index" separator=",">
			(null,#{item.departName,jdbcType=VARCHAR},#{item.pid,jdbcType=BIGINT},#{item.pname,jdbcType=VARCHAR},#{item.departDesc,jdbcType=VARCHAR},
			<choose>
				<when test="item.sortIndex!= null">sort_index = #{item.sortIndex,jdbcType=INTEGER}</when>
				<otherwise>1</otherwise>
			</choose>
			)
		</foreach>
	</insert>
	<delete id="deleteByPrimaryKeys" parameterType="list">
		delete from ts_depart where depart_id in
		<foreach open="(" close=")" collection="list" item="departId" separator=",">#{departId,jdbcType=BIGINT}
		</foreach>
	</delete>
	<delete id="deleteAll">
		delete from ts_depart
	</delete>
	<select id="selectEntitys" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ts_depart
		<where>
			<if test="departId != null "> and depart_id = #{departId,jdbcType=BIGINT} </if>
			<if test="departName != null "> and depart_name = #{departName,jdbcType=VARCHAR} </if>
			<if test="pid != null "> and pid = #{pid,jdbcType=BIGINT} </if>
			<if test="pname != null "> and pname = #{pname,jdbcType=VARCHAR} </if>
			<if test="departDesc != null "> and depart_desc = #{departDesc,jdbcType=VARCHAR} </if>
			<if test="sortIndex != null "> and sort_index = #{sortIndex,jdbcType=INTEGER} </if>
		</where>
	</select>
	<select id="selectLists" resultType="map">
		select
		<include refid="Base_Column_List" />
		from ts_depart
		<where>
			<if test="departId != null "> and depart_id = #{departId,jdbcType=BIGINT} </if>
			<if test="departName != null "> and depart_name = #{departName,jdbcType=VARCHAR} </if>
			<if test="pid != null "> and pid = #{pid,jdbcType=BIGINT} </if>
			<if test="pname != null "> and pname = #{pname,jdbcType=VARCHAR} </if>
			<if test="departDesc != null "> and depart_desc = #{departDesc,jdbcType=VARCHAR} </if>
			<if test="sortIndex != null "> and sort_index = #{sortIndex,jdbcType=INTEGER} </if>
		</where>
	</select>
	<select id="countByEntity" resultType="java.lang.Long">
		select count(*) from ts_depart
		<where>
			<if test="departId != null ">and depart_id = #{departId,jdbcType=BIGINT} </if>
			<if test="departName != null ">and depart_name = #{departName,jdbcType=VARCHAR} </if>
			<if test="pid != null ">and pid = #{pid,jdbcType=BIGINT} </if>
			<if test="pname != null ">and pname = #{pname,jdbcType=VARCHAR} </if>
			<if test="departDesc != null ">and depart_desc = #{departDesc,jdbcType=VARCHAR} </if>
			<if test="sortIndex != null ">and sort_index = #{sortIndex,jdbcType=INTEGER} </if>
		</where>
	</select>
	<select id="getMaxValue" resultType="java.lang.Long">
		select
		<choose>
			<when test="'departId' == _parameter.column">max(depart_id)</when>
			<when test="'pid' == _parameter.column">max(pid)</when>
			<when test="'sortIndex' == _parameter.column">max(sort_index)</when>
			<otherwise>max(0)</otherwise>
		</choose>
		from ts_depart
	</select>
	<select id="getMaxTime" resultType="java.util.Date">
		select
		<choose>
			<otherwise>1970-01-01 00:00:00</otherwise>
		</choose>
		from ts_depart
	</select>

	<select id="selectByRoleId" parameterType="Long" resultMap="BaseResultMap">
		select d.depart_id, d.pid from ts_depart d
		left join tr_role_depart rd on d.depart_id = rd.depart_id
		where rd.role_id = #{roleId}
		order by d.pid, d.sort_index
	</select>
</mapper>